{"version":3,"sources":["components/UI/card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/chart/Chartbar.js","components/chart/Chart.js","components/chart/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","Month","date","toLocaleString","month","Day","day","Year","getFullYear","ExpenseItem","useState","title","setTitle","amount","onClick","ExpensesFilter","value","selected","onChange","event","console","log","target","onFilter","Chartbar","barFillheight","max","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","datapoint","maxValue","ExpensesChart","chartDatapoints","expenses","expense","getMonth","Expenses","filteredYear","setFilteredYear","filteredArray","filter","toString","expensesContent","color","textAlign","fontWeight","length","item","id","year","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setEditingHandler","enteredExpenseData","onAddExpense","Dummy_Expenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.406b29cc.chunk.js","sourcesContent":["import './Card.css'\r\n\r\n// children is not a attribute but it will be the value of content between opening and closing tag of custom component\r\n// if you dont add this the content of card wont be visible\r\nfunction Card(props){\r\n    const classes='card '+props.className;\r\n    return (\r\n        \r\n        <div className={classes}>{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css';\r\n\r\n\r\nfunction ExpenseDate(props){\r\n    const Month=props.date.toLocaleString('en-Us',{month:'long'});\r\n    const Day=props.date.toLocaleString('en-Us',{day:'2-digit'});\r\n    const Year=props.date.getFullYear();\r\nreturn (\r\n\r\n    <div className=\"expense-date\">\r\n    <div className=\"expense-date__month\">{Month}</div>\r\n    <div className=\"expense-date__year\">{Year }</div>\r\n    <div className=\"expense-date__day\">{Day}</div>\r\n  </div>\r\n\r\n)\r\n}\r\n\r\nexport default ExpenseDate ","import React,{useState} from 'react';\r\nimport './ExpenseItem.css'\r\nimport './ExpenseDate'\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/card.js'\r\n// we dont use multiple prameters in react instead use one i.e props\r\n\r\nfunction ExpenseItem(props) {\r\n  \r\n  //it returns two things a special variable that stores the variable to be changed and the updating fnctn\r\n  const [title, setTitle]=useState(props.title);\r\n  \r\n  //let title=props.title\r\n   function clickHandler(){\r\n\r\n   setTitle(\"Updated!\");\r\n   // on changing title by following method the title wont change because this click wont trigger the comp fnctn to run again so we have to use reacts hooks its a react fnctn nameduseSstate\r\n   //title=\"Updated!\"\r\n   }\r\n   \r\n     return (\r\n    <Card className=\"expense-item\">\r\n    <ExpenseDate date={props.date}></ExpenseDate>\r\n   \r\n    <div className=\"expense-item__description\">\r\n    \r\n      <h2>{props.title}</h2>\r\n      <div className=\"expense-item__price\">{props.amount}</div>\r\n    </div>\r\n    <button onClick={clickHandler}>Change title</button>\r\n  </Card>\r\n  \r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    function changeHandler(event){\r\n      console.log(event.target.value);\r\n      props.onFilter(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        {/*default value set to 2020*/}\r\n        <select value={props.selected} onChange={changeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import react from \"react\";\r\n\r\nimport './Chartbar.css'\r\n\r\nfunction Chartbar(props){\r\n    let barFillheight='0%';\r\n    if(props.max>0){\r\n        barFillheight=Math.round((props.value/props.max)*100)+'%'\r\n    }\r\n    return(\r\n         <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n        {/* style is not same in jsx as in html you have to render it dynamically so we use braces // now each of the style component is rendered\r\n        as js objects so another curly braces and they are key value pair so in the key part either use camelcasing or inverted commas*/ }\r\n            <div className=\"chart-bar__fill\" style={{height:barFillheight}}>\r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Chartbar","import React from \"react\";\r\nimport './Chart.css';\r\nimport Chartbar from './Chartbar.js'\r\n\r\nfunction Chart(props){\r\n    const dataPointValues=props.dataPoints.map(datapoint=>datapoint.value);\r\n\r\n    const maxValue=Math.max(...dataPointValues);// convert array into individual values\r\n    return(  <div className=\"chart\">\r\n    {/*to change the elements of array map is used \r\n    here key is used to uniquely identify every element*/ }\r\n        {props.dataPoints.map(datapoint=>(\r\n            <Chartbar \r\n            key={datapoint.label} \r\n            value={datapoint.value}\r\n             max={maxValue}\r\n             label={datapoint.label}\r\n             >\r\n             </Chartbar>\r\n        ))}\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Chart","import React from \"react\";\r\n\r\nimport Chart from \"./Chart\";\r\n\r\nfunction ExpensesChart(props){\r\n    const chartDatapoints=[\r\n        {label:'Jan' ,value:0},\r\n        {label:'Feb' ,value:0},\r\n        {label:'Mar' ,value:0},\r\n        {label:'Apr' ,value:0},\r\n        {label:'May' ,value:0},\r\n        {label:'Jun' ,value:0},\r\n        {label:'Jul' ,value:0},\r\n        {label:'Aug' ,value:0},\r\n        {label:'Sep' ,value:0},\r\n        {label:'Oct' ,value:0},\r\n        {label:'Nov' ,value:0},\r\n        {label:'Dec' ,value:0}\r\n        ]\r\n    for(const expense of props.expenses ){\r\n     const ExpenseMonth=expense.date.getMonth();\r\n     chartDatapoints[ExpenseMonth].value+=expense.amount; // janwill return 0\r\n    }\r\nreturn <Chart  dataPoints={chartDatapoints}></Chart>\r\n}\r\n\r\nexport default ExpensesChart","import \"./Expenses.css\";\r\nimport Card from \"../UI/card.js\";\r\nimport { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem.js\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"../chart/ExpensesChart\";\r\nfunction Expenses(props) {\r\n  const style = {\r\n    color: 'white',\r\n    textAlign:'center',\r\n    fontWeight:'bold'\r\n  };\r\n\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  function onFilterHandler(year) {\r\n    setFilteredYear(year);\r\n  }\r\n// filter in order to display acc to year\r\n  const filteredArray = props.expenses.filter(function (expenses) {\r\n    return expenses.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  let expensesContent = <p style={style}>NO Expenses Found!</p>;\r\n  {\r\n    if (filteredArray.length > 0) {\r\n      expensesContent = filteredArray.map((item) => (\r\n        <ExpenseItem\r\n          key={item.id}\r\n          title={item.title}\r\n          amount={item.amount}\r\n          date={item.date}\r\n        />\r\n      ));\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onFilter={onFilterHandler}\r\n        ></ExpensesFilter>\r\n        {/* now with the help of <EXpense item we are able to extract the given list only but with the help of new expenses we are adding a new item also that wont be dynamically render so in o\r\n   rder to obtain that we will have to dynamically render that for that we use map above*/}\r\n   <ExpensesChart expenses={filteredArray}></ExpensesChart>\r\n        {expensesContent}\r\n\r\n        {/*<ExpenseItem title={props.expenses[0].title} amount={props.expenses[0].amount} date={props.expenses[0].date}></ExpenseItem> \r\n    <ExpenseItem title={props.expenses[1].title} amount={props.expenses[1].amount} date={props.expenses[1].date}></ExpenseItem> \r\n    <ExpenseItem title={props.expenses[2].title} amount={props.expenses[2].amount} date={props.expenses[2].date}></ExpenseItem> \r\n    <ExpenseItem title={props.expenses[3].title} amount={props.expenses[3].amount} date={props.expenses[3].date}></ExpenseItem> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\n\r\nfunction ExpenseForm(props) {\r\n \r\n\r\n\r\n    // multistate\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    function submitHandler(event){\r\n        event.preventDefault();// usually page reloads on submission// it prevents from reloading\r\n        const expenseData={\r\n        title:enteredTitle,\r\n        amount:+enteredAmount,\r\n        date :new Date(enteredDate)\r\n    };\r\n    console.log(\"Expenseform\")\r\n    console.log(expenseData);\r\n    props.onSaveExpenseData(expenseData);\r\n    // in order to clear input of the form\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('')\r\n}\r\n// single state \r\n//const[userInput,setInput]=useState(\r\n   // enteredTitle=' ',\r\n    //enteredAmount=' ',\r\n   // enteredDate=' '\r\n//);\r\n  function titleChangeHandler(event) {\r\n      // singlestate\r\n     // setEnteredTitle(\r\n       //   ...userInput, // for every state you have to pass so we use spread operator\r\n         // enteredTitle=event.target.value\r\n      //)\r\n      //multi state\r\n    setEnteredTitle(event.target.value);\r\n  }\r\n  function dateChangeHandler(event) {\r\n    setEnteredDate(event.target.value);\r\n  }\r\n  function amountChangeHandler(event) {\r\n    setEnteredAmount(event.target.value);\r\n  }\r\n\r\n  return (\r\n      \r\n    <form onSubmit={submitHandler}>\r\n    \r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangeHandler} value={enteredTitle}></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n      <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\nexport default ExpenseForm;\r\n","import './NewExpense.css'\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { useState } from 'react/cjs/react.development';\r\n\r\n\r\n\r\n\r\n\r\n\r\n// after you take a i/p  from expense form you have to add that in expenses array in app js i.e you have to pas data from child comp to parent comp\r\n// expenseform->newexpense->app\r\n\r\nfunction NewExpense(props){\r\n    function saveExpenseDataHandler(enteredExpenseData){\r\n        console.log(enteredExpenseData);\r\n        //app.js\r\n        props.onAddExpense(enteredExpenseData);\r\n        setEditingHandler(false);\r\n        \r\n    }\r\n   // in order to show and hide button we have to change the state\r\n   const[isEditing,setEditingHandler]=useState(false);\r\n    function onEditingHandler(){\r\n        // if isEditing false button is displayed otherwise form is displayed\r\n        setEditingHandler(true);\r\n    }\r\n\r\n    function stopEditingHandler(){\r\n        setEditingHandler(false);\r\n    }\r\n\r\n    return(\r\n        <div className=\"new-expense\">\r\n        {/*instead of if statement && is used if the condition before&& is true then the condition after& is rendered*/}\r\n        {!isEditing&&<button onClick={onEditingHandler} >Add new Expense</button>}\r\n           {isEditing&&<ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\r\n            </div>\r\n    );\r\n\r\n}\r\n\r\nexport  default NewExpense","import './App.css';\nimport { useState } from 'react';\n// All other components will be exported here within the main component\nimport Expenses from './components/Expenses/Expenses.js'; \nimport NewExpense from './components/NewExpense/NewExpense';\nconst Dummy_Expenses = [\n  {\n    id: 'e1',\n    title: 'Soap',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\nfunction App() {\n  const [expenses,setExpenses]=useState(Dummy_Expenses);\n  function addExpenseHandler(expense){\n    \n\n    setExpenses(function (prevExpenses){\n         return [expense,...prevExpenses];// in starting of array prevexpenses add a expense element\n    });\n  }\n  \n  return (\n    <div className=\"App\">\n  \n   <NewExpense onAddExpense={addExpenseHandler}/>\n   {/* similar to attributes of html */}\n    <Expenses expenses={expenses}></Expenses>\n  \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// only root component is exported\n\nReactDOM.render( <App />,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}